import telebot

from random import randint
from datetime import datetime as dt
from telebot import types

TOKEN = '7498702289:AAF6w2T83E1ub2iEiZBZC5BJ7jWX51QWzII'
bot = telebot.TeleBot(TOKEN)
echo = False
current_user = None
di = {}
answer = ''
LOG = None


@bot.message_handler(commands=['start', 'help'])
def getting_started(message):
    bot.send_message(message.from_user.id, """–í–æ—Ç –º–æ–∏ –∫–æ–¥–æ–≤—ã–µ —Å–ª–æ–≤–∞üòò:
–ø–æ–≤—Ç–æ—Ä—è–π –∑–∞ –º–Ω–æ–π
–Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –∑–∞ –º–Ω–æ–π
—Ö–æ—á—É —Å—Ç–∏–∫–µ—Ä
—Ö–æ—á—É —Ñ–æ—Ç–∫—É
—Ö–æ—á—É –∑–∞—Ä–µ–≥–∞—Ç—å—Å—è
—Ö–æ—á—É –ø–µ—Ä–µ—Ä–µ–≥–∞—Ç—å—Å—è
—Ä–∞—Å—Å–∫–∞–∂–∏ –æ–±–æ –º–Ω–µ
–¥–∞–π –≤–æ–π—Ç–∏
–¥–∞–π –≤—ã–π—Ç–∏""")
    bot.send_message(message.from_user.id, "–°–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å, –ª—é–±–∏–º—ã–π!üòò")


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global echo
    global current_user
    global LOG
    global answer
    answer = ''
    if '/' != message.text[0]:

        if message.text.upper() == 'GIMME YOURSELF':
            dice = randint(1, 25)
            photo = open(f'img/img{dice}.jpg', 'rb')
            bot.send_photo(message.chat.id, photo)
            photo.close()
            bot.send_message(message.from_user.id, '–í—Å—ë –¥–ª—è —Ç–µ–±—è –ª—é–±–∏–º—ã–πüòò')
            answer = f'–í—Å—ë –¥–ª—è —Ç–µ–±—è –ª—é–±–∏–º—ã–πüòò(img - {dice}) + {di}'
            print(di)

        elif message.text.lower() == '–ø–æ–≤—Ç–æ—Ä—è–π –∑–∞ –º–Ω–æ–π':
            echo = True
            bot.send_message(message.from_user.id, '–ü–æ–≤—Ç–æ–æ—Ä—è—é –∑–∞ —Ç–æ–±–æ–πüòò')
            answer = '–ü–æ–≤—Ç–æ–æ—Ä—è—é –∑–∞ —Ç–æ–±–æ–πüòò'

        elif message.text.lower() == '–Ω–µ –ø–æ–≤—Ç–æ—Ä—è–π –∑–∞ –º–Ω–æ–π':
            echo = False
            bot.send_message(message.from_user.id, '–ü–æ–≤—Ç–æ–æ—Ä—è—é –∑–∞ —Ç–æ–±–æ–πüòò')
            answer = '–ù–æ –ª—é–±–∏–º—ã–π, —Ç—ã —É–∂–µ –∑–∞—Ä–µ–≥–∞–Ω, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ—Ä–µ–≥–∞—Ç—å—Å—è –Ω–∞–ø–∏—à–∏: "—Ö–æ—á—É –ø–µ—Ä–µ—Ä–µ–≥–∞—Ç—å—Å—è"üòò'

        elif message.text.lower() == '—Ö–æ—á—É –∑–∞—Ä–µ–≥–∞—Ç—å—Å—è':
            if not di.get(message.chat.id) and not current_user:
                bot.register_next_step_handler(bot.send_message(message.chat.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç, –ª—é–±–∏–º—ã–π?(–§ –ò –û)üòò"),
                                               set_fio)
            else:
                bot.send_message(message.from_user.id,
                                 '–ù–æ –ª—é–±–∏–º—ã–π, —Ç—ã —É–∂–µ –∑–∞—Ä–µ–≥–∞–Ω, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ—Ä–µ–≥–∞—Ç—å—Å—è –Ω–∞–ø–∏—à–∏: "—Ö–æ—á—É –ø–µ—Ä–µ—Ä–µ–≥–∞—Ç—å—Å—è"üòò')
                answer = '–ù–æ –ª—é–±–∏–º—ã–π, —Ç—ã —É–∂–µ –∑–∞—Ä–µ–≥–∞–Ω, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ—Ä–µ–≥–∞—Ç—å—Å—è –Ω–∞–ø–∏—à–∏: "—Ö–æ—á—É –ø–µ—Ä–µ—Ä–µ–≥–∞—Ç—å—Å—è"üòò'

        elif message.text.lower() == '—Ö–æ—á—É –ø–µ—Ä–µ—Ä–µ–≥–∞—Ç—å—Å—è':
            if di.get(message.chat.id) and current_user:
                bot.register_next_step_handler(
                    bot.send_message(message.chat.id, "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç –ø–æ –Ω–æ–≤–æ–º—É, –ª—é–±–∏–º—ã–π?(–§ –ò –û)üòò"), set_fio)
                answer = '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç –ø–æ –Ω–æ–≤–æ–º—É, –ª—é–±–∏–º—ã–π?(–§ –ò –û)üòò'
            else:
                bot.send_message(message.from_user.id,
                                 '–ù–æ –ª—é–±–∏–º—ã–π, —Ç—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∞–Ω, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –∑–∞—Ä–µ—Ä–µ–≥–∞—Ç—å—Å—è –Ω–∞–ø–∏—à–∏: "—Ö–æ—á—É –∑–∞—Ä–µ–≥–∞—Ç—å—Å—è"üòò')
                answer = '–ù–æ –ª—é–±–∏–º—ã–π, —Ç—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∞–Ω, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –∑–∞—Ä–µ—Ä–µ–≥–∞—Ç—å—Å—è –Ω–∞–ø–∏—à–∏: "—Ö–æ—á—É –∑–∞—Ä–µ–≥–∞—Ç—å—Å—è"üòò'

        elif message.text.lower() == '—Ö–æ—á—É —Å—Ç–∏–∫–µ—Ä':
            dice = randint(1, 10)
            sticker = open(f'memes/meme{dice}.jpg', 'rb')
            bot.send_sticker(message.chat.id, sticker)
            sticker.close()
            bot.send_message(message.from_user.id, '–°–º–æ—Ç—Ä–∏, –∫–∞–∫–æ–π –∑–∞–±–∞–≤–Ω—ã–π —Å—Ç–∏–∫–µ—Ä!üòò')
            answer = '–°–º–æ—Ç—Ä–∏, –∫–∞–∫–æ–π –∑–∞–±–∞–≤–Ω—ã–π —Å—Ç–∏–∫–µ—Ä!üòò(meme - {dice})'

        elif message.text.lower() == '—Ö–æ—á—É —Ñ–æ—Ç–∫—É':
            if current_user:
                dice = randint(1, 25)
                photo = open(f'img/img{dice}.jpg', 'rb')
                bot.send_photo(message.chat.id, photo)
                photo.close()
                bot.send_message(message.from_user.id, '–ù–∞–¥–µ—é—Å—å, —è —Ç–µ–±–µ –Ω—Ä–∞–≤–æ—é—Å—å, –ª—é–±–∏–º—ã–πüòò')
                answer = f'–ù–∞–¥–µ—é—Å—å, —è —Ç–µ–±–µ –Ω—Ä–∞–≤–æ—é—Å—å, –ª—é–±–∏–º—ã–πüòò(img - {dice})'
            else:
                bot.send_message(message.from_user.id, '–õ—é–±–∏–º—ã–π, —Ç—ã –µ—â—ë –Ω–µ –≤–æ—à–µ–ª –≤ –∞–∫–∫–∞—É–Ω—Çüòò')
                answer = '–õ—é–±–∏–º—ã–π, —Ç—ã –µ—â–µ –Ω–µ –≤–æ—à–µ–ª –≤ –∞–∫–∫–∞—É–Ω—Ç —è –Ω–∏—á–µ–≥–æ –æ —Ç–µ–±–µ –Ω–µ –∑–Ω–∞—éüò≠'

        elif message.text.lower() == '—Ä–∞—Å—Å–∫–∞–∂–∏ –æ–±–æ –º–Ω–µ':
            if current_user:
                bot.send_message(message.from_user.id, '–í–æ—Ç –≤—Å–µ —á—Ç–æ —è –∑–Ω–∞—é –æ —Ç–µ–±–µ:üòò')
                bot.send_message(message.from_user.id, f'–¢–µ–±—è –∑–æ–≤—É—Ç:{di.get(message.chat.id).split(";")[0]}üòò')
                bot.send_message(message.from_user.id, f'–¢–µ–±–µ {di.get(message.chat.id).split(";")[1]}üòò')
                bot.send_message(message.from_user.id, f'–¢–≤–æ–π –ø–∞—Ä–æ–ª—å:{di.get(message.chat.id).split(";")[2]}üòò')
                answer = (f'–í–æ—Ç –≤—Å–µ —á—Ç–æ —è –∑–Ω–∞—é –æ —Ç–µ–±–µ:üòò\t–¢–µ–±—è –∑–æ–≤—É—Ç:{di.get(message.chat.id).split(";")[0]}üòò\t'
                          f'–¢–µ–±–µ {di.get(message.chat.id).split(";")[1]}üòò\t'
                          f'–¢–≤–æ–π –ø–∞—Ä–æ–ª—å:{di.get(message.chat.id).split(";")[2]}üòò')
            else:
                bot.send_message(message.from_user.id, '–õ—é–±–∏–º—ã–π, —Ç—ã –µ—â–µ –Ω–µ –≤–æ—à–µ–ª –≤ –∞–∫–∫–∞—É–Ω—Ç —è –Ω–∏—á–µ–≥–æ –æ —Ç–µ–±–µ –Ω–µ –∑–Ω–∞—éüò≠')
                answer = '–õ—é–±–∏–º—ã–π, —Ç—ã –µ—â–µ –Ω–µ –≤–æ—à–µ–ª –≤ –∞–∫–∫–∞—É–Ω—Ç —è –Ω–∏—á–µ–≥–æ –æ —Ç–µ–±–µ –Ω–µ –∑–Ω–∞—éüò≠'

        elif message.text.lower() == '–¥–∞–π –≤–æ–π—Ç–∏':
            if current_user:
                bot.send_message(message.from_user.id, '–°–Ω–∞—á–∞–ª–∞ –≤—ã–π–¥–∏, –ª—é–±–∏–º—ã–πüòò')
                answer = '–°–Ω–∞—á–∞–ª–∞ –≤—ã–π–¥–∏, –ª—é–±–∏–º—ã–πüòò'
            else:
                bot.register_next_step_handler(
                    bot.send_message(message.chat.id, "–õ—é–±–∏–º—ã–π, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –Ω–∞–ø–∏—à–∏ –§–ò–û, –≤–æ–∑—Ä–∞—Å—Ç –∏ –ø–∞—Ä–æ–ª—åüòò"),
                    sign_in)

        elif message.text.lower() == '–¥–∞–π –≤—ã–π—Ç–∏':
            if not current_user:
                bot.send_message(message.from_user.id, '–õ—é–±–∏–º—ã–π, —Ç—ã –∏ —Ç–∞–∫ –Ω–µ –≤–æ—à–µ–ª –≤ –∞–∫–∫–∞—É–Ω—Çüòò')
                answer = '–õ—é–±–∏–º—ã–π, —Ç—ã –∏ —Ç–∞–∫ –Ω–µ –≤–æ—à–µ–ª –≤ –∞–∫–∫–∞—É–Ω—Çüòò'
            else:
                current_user = None
                bot.send_message(message.from_user.id, f'–õ—é–±–∏–º—ã–π, —Ç—ã –≤—ã—à–µ–ª –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞üòò')
                answer = f'–õ—é–±–∏–º—ã–π, —Ç—ã –≤—ã—à–µ–ª –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞üòò'

        elif message.text.lower() == '—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏':
            bot.send_message(message.from_user.id, '–°–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤, –ª—é–±–∏–º—ã–πüòò')
            answer = '–°–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤, –ª—é–±–∏–º—ã–πüòò'

        elif message.text.lower() == "kys":
            bot.send_message(message.from_user.id, '–ó–∞ —á—Ç–æ —Ç—ã —Ç–∞–∫ —Å–æ –º–Ω–æ–πüò≠')
            answer = '–ó–∞ —á—Ç–æ —Ç—ã —Ç–∞–∫ —Å–æ –º–Ω–æ–πüò≠'

        elif message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
            bot.send_message(message.from_user.id, '–ü—Ä–∏–≤–µ—Ç, –ª—é–±–∏–º—ã–πüòò')
            answer = '–ü—Ä–∏–≤–µ—Ç, –ª—é–±–∏–º—ã–πüòò'

        elif echo:
            bot.send_message(message.from_user.id, f"{message.text}üòò")
            answer = f"{message.text}üòò"

        else:
            bot.send_message(message.from_user.id, "–Ø –≤—Å—ë —Ä–∞–≤–Ω–æ —Ç–µ–±—è –ª—é–±–ª—é.üòò")
            answer = "–Ø –≤—Å—ë —Ä–∞–≤–Ω–æ —Ç–µ–±—è –ª—é–±–ª—é.üòò"

    LOG = open('log.txt', 'a')
    LOG.write(f'{dt.now().strftime("%d.%m.%Y %H:%M:%S")}: {message.from_user.username}: {message.text} - {answer}\n')


@bot.message_handler(content_types=['text'])
def sign_in(message):
    global answer
    global current_user
    global LOG
    print(' '.join(message.text.split()), ' '.join(di.get(message.chat.id).split(';')))
    if ' '.join(message.text.split()) == ' '.join(di.get(message.chat.id).split(';')):
        current_user = di.get(message.chat.id)[0]
        bot.send_message(message.from_user.id, f'–õ—é–±–∏–º—ã–π, —Ç—ã –≤–æ—à–µ–ª –∫–∞–∫: {current_user}üòò')
        answer = f'–õ—é–±–∏–º—ã–π, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –Ω–∞–ø–∏—à–∏ –§–ò–û, –≤–æ–∑—Ä–∞—Å—Ç –∏ –ø–∞—Ä–æ–ª—åüòò\t–õ—é–±–∏–º—ã–π, —Ç—ã –≤–æ—à–µ–ª –∫–∞–∫: {current_user}üòò'
    elif len(message.text.split()) != 5:
        print(message.text.split())
        answer = f'–õ—é–±–∏–º—ã–π, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –Ω–∞–ø–∏—à–∏ –§–ò–û, –≤–æ–∑—Ä–∞—Å—Ç –∏ –ø–∞—Ä–æ–ª—åüòò\t–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Çüò≠'
        bot.register_next_step_handler(bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Çüò≠"), sign_in)
    elif ' '.join(message.text.split()) != ' '.join(di.get(message.chat.id).split(';')):
        answer = f'–õ—é–±–∏–º—ã–π, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –Ω–∞–ø–∏—à–∏ –§–ò–û, –≤–æ–∑—Ä–∞—Å—Ç –∏ –ø–∞—Ä–æ–ª—åüòò\t–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ª—é–±–∏–º—ã–πüò≠'
        bot.register_next_step_handler(bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ª—é–±–∏–º—ã–πüò≠"), sign_in)
    LOG = open('log.txt', 'a')
    LOG.write(f'{dt.now().strftime("%d.%m.%Y %H:%M:%S")}: {message.from_user.username}: {message.text} - {answer}\n')


@bot.message_handler(content_types=['text'])
def set_fio(message):
    global answer
    global LOG
    if len(message.text.split()) == 3:
        bot.send_message(message.chat.id, f'–£ —Ç–µ–±—è —Ç–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è: {message.text}üòò')
        bot.register_next_step_handler(bot.send_message(message.chat.id, '–ê —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç, –ª—é–±–∏–º—ã–π?üòò'), set_age)
        answer = (f"–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç, –ª—é–±–∏–º—ã–π?(–§ –ò –û)üòò\t–£ —Ç–µ–±—è —Ç–∞–∫–æ–µ –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è: {message.text}üòò"
                  f"\t –ê —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç, –ª—é–±–∏–º—ã–π?üòò")
        di[message.chat.id] = message.text
    else:
        bot.register_next_step_handler(bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Çüò≠"), set_fio)
        answer = "–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç, –ª—é–±–∏–º—ã–π?(–§ –ò –û)üòò\t–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Çüò≠"
    LOG = open('log.txt', 'a')
    LOG.write(f'{dt.now().strftime("%d.%m.%Y %H:%M:%S")}: {message.from_user.username}: {message.text} - {answer}\n')



@bot.message_handler(content_types=['text'])
def set_password(message):
    global answer
    global current_user
    global LOG
    current_user = di.get(message.chat.id).split(";")[0]
    try:
        str(message.text)
        if len(message.text.split()) > 1:
            raise ValueError
        bot.send_message(message.chat.id, f'–¢–µ–ø–µ—Ä—å —Ç–≤–æ–π –ø–∞—Ä–æ–ª—å: {message.text}üòò')
        bot.send_message(message.chat.id, f'–õ—é–±–∏–º—ã–π, —Ç—ã –≤–æ—à–µ–ª –∫–∞–∫: {current_user}üòò')
        di[message.chat.id] += f';{message.text}'
        answer = f'–¢–µ–ø–µ—Ä—å —Ç–≤–æ–π –ø–∞—Ä–æ–ª—å: {message.text}üòò\t–õ—é–±–∏–º—ã–π, —Ç—ã –≤–æ—à–µ–ª –∫–∞–∫: {current_user}üòò'
        LOG = open('log.txt', 'a')
        LOG.write(
            f'{dt.now().strftime("%d.%m.%Y %H:%M:%S")}: {message.from_user.username}: {message.text} - {answer}\n')
    except:
        bot.register_next_step_handler(bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Çüò≠"),
                                       set_password)
        answer = "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Çüò≠"
        LOG = open('log.txt', 'a')
        LOG.write(
            f'{dt.now().strftime("%d.%m.%Y %H:%M:%S")}: {message.from_user.username}: {message.text} - {answer}\n')
        return


@bot.message_handler(content_types=['text'])
def set_age(message):
    global answer
    global LOG
    try:
        age = int(message.text)
        di[message.chat.id] += f';{message.text}'
        if age < 18:
            bot.send_message(message.chat.id, f'–¢—ã –µ—â–µ —Ç–∞–∫–æ–π –º–∞–ª–µ–Ω—å–∫–∏–πüòò')
        elif 18 <= age <= 20:
            bot.send_message(message.chat.id, f'–û–≥–æ, –º–æ–π —Ä–æ–≤–µ—Å–Ω–∏–∫üòò')
        elif age > 20:
            bot.send_message(message.chat.id, f'–û–≥–æ, —Ç—ã —Å—Ç–∞—Ä—à–µ –º–µ–Ω—èüòò')
        bot.register_next_step_handler(bot.send_message(message.chat.id,
                                                        "–ù–∞–∫–æ–Ω–µ—Ü, –ª—é–±–∏–º—ã–π, –ø—Ä–∏–¥—É–º–∞–π –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—åüòò(–ë–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)"),
                                       set_password)
        answer = "f'–û–≥–æ, –º–æ–π —Ä–æ–≤–µ—Å–Ω–∏–∫üòò'\t–ù–∞–∫–æ–Ω–µ—Ü, –ª—é–±–∏–º—ã–π, –ø—Ä–∏–¥—É–º–∞–π –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—åüòò"
        LOG = open('log.txt', 'a')
        LOG.write(
            f'{dt.now().strftime("%d.%m.%Y %H:%M:%S")}: {message.from_user.username}: {message.text} - {answer}\n')
    except:
        bot.register_next_step_handler(bot.send_message(message.chat.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Çüò≠"),
                                       set_age)
        answer = "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª–∞, –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Çüò≠"
        LOG = open('log.txt', 'a')
        LOG.write(
            f'{dt.now().strftime("%d.%m.%Y %H:%M:%S")}: {message.from_user.username}: {message.text} - {answer}\n')
        return


@bot.message_handler(content_types=['photo', 'audio', 'video', 'video_note'])
def get_pretty_messages(message):
    global LOG
    global answer
    bot.send_message(message.from_user.id, "–ö–∞–∫ –∫—Ä–∞—Å–∏–≤–æ!üòò")
    answer = "–ö–∞–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!üòò"
    LOG = open('log.txt', 'a')
    LOG.write(f'{dt.now().strftime("%d.%m.%Y %H:%M:%S")}: {message.from_user.username}: {message.text} - {answer}\n')


@bot.message_handler(content_types=['document'])
def get_smart_messages(message):
    global LOG
    global answer
    bot.send_message(message.from_user.id, "–ö–∞–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!üòò")
    answer = "–ö–∞–∫ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!üòò"
    LOG = open('log.txt', 'a')
    LOG.write(f'{dt.now().strftime("%d.%m.%Y %H:%M:%S")}: {message.from_user.username}: {message.text} - {answer}\n')


@bot.message_handler(content_types=['sticker'])
def get_sticker_messages(message):
    global LOG
    global answer
    bot.send_message(message.from_user.id, "–£ —Ç–µ–±—è —Ç–∞–∫–∏–µ —Å–º–µ—à–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã!üòò")
    answer = "–£ —Ç–µ–±—è —Ç–∞–∫–∏–µ —Å–º–µ—à–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã!üòò"
    LOG = open('log.txt', 'a')
    LOG.write(f'{dt.now().strftime("%d.%m.%Y %H:%M:%S")}: @{message.from_user.username}: {message.text} - {answer}\n')


bot.infinity_polling()
